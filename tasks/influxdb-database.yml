---
- name: Make sure the Graphite InfluxDB exists
  shell: 'influx -username {{ graphite_api_influxdb_admin_user }} -password {{ graphite_api_influxdb_admin_pass }} -execute "CREATE DATABASE \"{{ current_database.name }}\""'

- name: Grant all permissions to InfluxDB user on the Graphite database
  shell: 'influx -username {{ graphite_api_influxdb_admin_user }} -password {{ graphite_api_influxdb_admin_pass }} -database {{ current_database.name }} -execute "GRANT ALL ON \"{{ current_database.name }}\" TO \"{{ graphite_api_influxdb_graphite_user }}\""'

- name: Make sure the Retention Policies don't exist
  shell: 'influx -username {{ graphite_api_influxdb_admin_user }} -password {{ graphite_api_influxdb_admin_pass }} -database {{ current_database.name }} -execute "DROP RETENTION POLICY \"{{ item.name }}\" ON \"{{ current_database.name }}\""'
  with_items: "{{ current_database.retention_policies }}"

- name: Create Retention Policies for the database
  shell: 'influx -username {{ graphite_api_influxdb_admin_user }} -password {{ graphite_api_influxdb_admin_pass }} -database {{ current_database.name }} -execute "CREATE RETENTION POLICY \"{{ item.name }}\" ON \"{{ current_database.name }}\" DURATION {{ item.duration }} REPLICATION 1 {% if item.default is defined and item.default == True %}DEFAULT{% endif %}"'
  with_items: "{{ current_database.retention_policies }}"

- block:
    - name: Make sure the Countinuous Queries don't exist
      shell: 'influx -username {{ graphite_api_influxdb_admin_user }} -password {{ graphite_api_influxdb_admin_pass }} -database {{ current_database.name }} -execute "DROP CONTINUOUS QUERY \"cq_{{ item.time }}\" ON \"{{ current_database.name }}\""'
      with_items: "{{ current_database.continuous_queries }}"

    - name: Create Continuous Queries for the database
      shell: 'influx -username {{ graphite_api_influxdb_admin_user }} -password {{ graphite_api_influxdb_admin_pass }} -database {{ current_database.name }} -execute "CREATE CONTINUOUS QUERY \"cq_{{ item.time }}\" ON \"{{ current_database.name }}\" BEGIN SELECT mean(*) INTO \"{{ item.dest_db }}\".\"{{ item.dest_rp }}\".:MEASUREMENT FROM /.*/ GROUP BY time({{ item.time }},1m),* fill(0) END"'
      with_items: "{{ current_database.continuous_queries }}"
  when: current_database.continuous_queries is defined
